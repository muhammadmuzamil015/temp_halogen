parallel(
    'Run Tests on bpif3 (Banana Pi F3)': {
        node('J-BPF3-1') {
            stage('Clean Workspace on bpif3') {
                cleanWs()
            }
            stage('Clone Repository on bpif3') {
                // Checkout the SCM (Git repository)
                checkout scm
            }
            stage('Run Tests on bpif3') {
                // Run the performance tests on Banana Pi F3
                sh '''#!/bin/bash
                    ./run_tests_performance.sh bpif3
                '''
            }
            stage('Archive and Stash Results from bpif3') {
                // Archive the performance results from Banana Pi F3
                archiveArtifacts artifacts: 'performance_results_bpif3.csv', allowEmptyArchive: true
                // Stash the results for use in another stage
                stash includes: 'performance_results_bpif3.csv', name: 'bpif3-results'
            }
        }
    },
    'Run Tests on raspi4 (Raspberry Pi 4)': {
        node('J-RASP4-1') {
            stage('Clean Workspace on raspi4') {
                cleanWs()
            }
            stage('Clone Repository on raspi4') {
                // Checkout the SCM (Git repository)
                checkout scm
            }
            stage('Run Tests on raspi4') {
                // Run the performance tests on raspi4
                sh '''#!/bin/bash
                ./run_tests_performance.sh raspi4
                '''
            }
            stage('Archive and Stash Results from raspi4') {
                // Archive the performance results from raspi4
                archiveArtifacts artifacts: 'performance_results_raspi4.csv', allowEmptyArchive: true
                // Stash the results for use in another stage
                stash includes: 'performance_results_raspi4.csv', name: 'raspi4-results'
            }
        }
    },
    'Run Tests on x86 Machine (qemu-riscv64)': {
        node('J-QMU-1') {
            stage('Load Modules on x86 Machine') {
                sh '''#!/bin/bash -l
                    source "$MODULE_INIT"
                    module load riscv64-gnu-glibc/02022024
                    module load spike/1.1.1-dev
                    module load riscv-pk/1.0.0-91-g573c858
                    module load gcc-aarch64-none-linux-gnu/13.3.rel1
                    riscv64-unknown-linux-gnu-gcc --version
                    aarch64-none-linux-gnu-gcc --version
                    spike /softwares/RISCV/riscv-pk/573c858d9071a2216537f71de651a814f76ee76d/riscv64-unknown-elf/bin/pk
                    qemu-aarch64 --version
                    qemu-riscv64 --version
                    python3 --version
                '''
            }
            stage('Clean Workspace on x86 Machine') {
                cleanWs()
            }
            stage('Clone Repository on x86 Machine') {
                // Checkout the SCM (Git repository)
                checkout scm
            }
            stage('Run Tests on qemu-riscv64') {
                // Run the performance tests on raspi4
                sh '''#!/bin/bash -l
                    source "$MODULE_INIT"
                    module load riscv64-gnu-glibc/02022024
                    ./run_tests_performance.sh qemu-riscv64
                '''
            }
            stage('Archive Results from qemu-riscv64') {
                // Archive the performance results from raspi4
                archiveArtifacts artifacts: 'performance_results_qemu-riscv64.csv', allowEmptyArchive: true
            }
        }
    }
)
node('J-QMU-1') {
            stage('Run Tests on qemu-aarch64') {
                // Run the performance tests on raspi4
                sh '''#!/bin/bash -l
                    source "$MODULE_INIT"
                    module load gcc-aarch64-none-linux-gnu/13.3.rel1
                    ./run_tests_performance.sh qemu-aarch64
                '''
            }
            stage('Archive Results from qemu-aarch64') {
                // Archive the performance results from raspi4
                archiveArtifacts artifacts: 'performance_results_qemu-aarch64.csv', allowEmptyArchive: true
            }

            stage('Run Tests on spike') {
                // Run the performance tests on raspi4
                sh '''#!/bin/bash -l
                    source "$MODULE_INIT"
                    module load spike/1.1.1-dev
                    module load riscv-pk/1.0.0-91-g573c858
                    ./run_tests_performance.sh spike
                '''
            }
            stage('Archive Results from spike') {
                // Archive the performance results from raspi4
                archiveArtifacts artifacts: 'performance_results_spike.csv', allowEmptyArchive: true
            }
            stage('Unstash Results from bpif3 to x86 machine') {
                // Unstash the results from bpif3
                unstash 'bpif3-results'
            }
            stage('Unstash Results from raspi4 to x86 machine') {
                // Unstash the results from bpif3
                unstash 'raspi4-results'
            }
            stage('Generate Combined Performance Comparison') {
                // Generate the performance comparison graph
                sh '''#!/bin/bash
                    ./combined_performance_comparison.sh
                '''
            }
            stage('Archive Combined Performance Results') {
                // Archive the generated graph
                archiveArtifacts artifacts: 'combined_performance_results.csv', allowEmptyArchive: true
            }
            stage('Generate Combined Performance Graph and Archive Graph') {
                // Generate the performance comparison graph
                sh '''#!/bin/bash
                    python3 generate_performance_graph.py                
                '''
                // Archive the generated graph
                archiveArtifacts artifacts: 'performance_comparison_across_targets.png', allowEmptyArchive: true
            }
}


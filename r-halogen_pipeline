parallel(
    'Run Tests on bpif3 (Banana Pi F3)': {
        node('J-BPF3-1') {
            stage('Clean Workspace on bpif3') {
                cleanWs()
            }
            stage('Clone Repository on bpif3') {
                // Checkout the SCM (Git repository)
                checkout scm
            }
            stage('Run Correctness and Performance Tests on bpif3') {
                parallel(
                    'Run Correctness Tests': {
                        sh '''#!/bin/bash
                            ./run_tests_correctness.sh bpif3
                        '''
                    },
                    'Run Performance Tests': {
                        sh '''#!/bin/bash
                            ./run_tests_performance.sh bpif3
                        '''
                    }
                )
            }
            stage('Stash Results from bpif3') {
                // Stash the results for use in another stage
                stash includes: 'performance_results_bpif3.csv,correctness_results_bpif3.csv', name: 'bpif3-results'
            }
        }
    },
    'Run Tests on raspi4 (Raspberry Pi 4)': {
        node('J-RASP4-1') {
            stage('Clean Workspace on raspi4') {
                cleanWs()
            }
            stage('Clone Repository on raspi4') {
                // Checkout the SCM (Git repository)
                checkout scm
            }
            stage('Run Correctness and Performance Tests on raspi4') {
                parallel(
                    'Run Correctness Tests': {
                        sh '''#!/bin/bash
                            ./run_tests_correctness.sh raspi4
                        '''
                    },
                    'Run Performance Tests': {
                        sh '''#!/bin/bash
                            ./run_tests_performance.sh raspi4
                        '''
                    }
                )
            }
            stage('Stash Results from raspi4') {
                // Stash the results for use in another stage
                stash includes: 'performance_results_raspi4.csv,correctness_results_raspi4.csv', name: 'raspi4-results'
            }
        }
    },
    'Run Tests on x86 Machine (qemu-riscv64, qemu-aarch64)': {
        node('J-QMU-1') {
            stage('Clean Workspace on x86 Machine') {
                cleanWs()
            }
            stage('Clone Repository on x86 Machine') {
                // Checkout the SCM (Git repository)
                checkout scm
            }
            stage('Run Correctness and Performance Tests on qemu-riscv64 and qemu-aarch64') {
                parallel(
                    'Run Correctness and Performance Tests on qemu-riscv64': {
                        parallel(
                            'Run Correctness Tests': {
                                sh '''#!/bin/bash -l
                                    source "$MODULE_INIT"
                                    module load riscv64-gnu-glibc/02022024
                                    ./run_tests_correctness.sh qemu-riscv64
                                '''
                            },
                            'Run Performance Tests': {
                                sh '''#!/bin/bash -l
                                    source "$MODULE_INIT"
                                    module load riscv64-gnu-glibc/02022024
                                    ./run_tests_performance.sh qemu-riscv64
                                '''
                            }
                        )
                    },
                    'Run Correctness and Performance Tests on qemu-aarch64': {
                        parallel(
                            'Run Correctness Tests': {
                                sh '''#!/bin/bash -l
                                    source "$MODULE_INIT"
                                    module load gcc-aarch64-none-linux-gnu/13.3.rel1
                                    ./run_tests_correctness.sh qemu-aarch64
                                '''
                            },
                            'Run Performance Tests': {
                                sh '''#!/bin/bash -l
                                    source "$MODULE_INIT"
                                    module load gcc-aarch64-none-linux-gnu/13.3.rel1
                                    ./run_tests_performance.sh qemu-aarch64
                                '''
                            }
                        )
                    }
                )
            }
        }
    }
)

node('J-QMU-1') {
    stage('Unstash Results from bpif3 to x86 Machine') {
        // Unstash the results from bpif3
        unstash 'bpif3-results'
    }
    stage('Unstash Results from raspi4 to x86 Machine') {
        // Unstash the results from raspi4
        unstash 'raspi4-results'
    }
    stage('Generate Correctness Comparison Across Targets') {
        // Generate the correctness comparison ressults across targets
        sh '''#!/bin/bash
            ./correctness_comparison_results.sh
        '''
    }
    stage('Generate Performance Comparison Across Targets') {
        // Generate the performance comparison resutls across targets
        sh '''#!/bin/bash
            ./performance_comparison_results.sh
        '''
    }
    stage('Archive Correctness and Performance Results') {
        // Archive the performance and correctness results across targets
        archiveArtifacts artifacts: 'performance_results.csv,correctness_results.csv', allowEmptyArchive: true
    }
    stage('Generate Performance Graph Across Targets and Archive') {
        // Generate the performance comparison graph
        sh '''#!/bin/bash
            python3 generate_performance_graph.py
        '''
        // Archive the generated performance graph
        archiveArtifacts artifacts: 'performance_comparison_across_targets.png', allowEmptyArchive: true
    }
}
